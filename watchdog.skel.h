/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */

/* THIS FILE IS AUTOGENERATED BY BPFTOOL! */
#ifndef __WATCHDOG_SKEL_H__
#define __WATCHDOG_SKEL_H__

#include <errno.h>
#include <stdlib.h>
#include <bpf/libbpf.h>

#define BPF_SKEL_SUPPORTS_MAP_AUTO_ATTACH 1

struct watchdog {
	struct bpf_object_skeleton *skeleton;
	struct bpf_object *obj;
	struct {
		struct bpf_map *events;
	} maps;
	struct {
		struct bpf_program *handle_openat;
	} progs;
	struct {
		struct bpf_link *handle_openat;
	} links;

#ifdef __cplusplus
	static inline struct watchdog *open(const struct bpf_object_open_opts *opts = nullptr);
	static inline struct watchdog *open_and_load();
	static inline int load(struct watchdog *skel);
	static inline int attach(struct watchdog *skel);
	static inline void detach(struct watchdog *skel);
	static inline void destroy(struct watchdog *skel);
	static inline const void *elf_bytes(size_t *sz);
#endif /* __cplusplus */
};

static void
watchdog__destroy(struct watchdog *obj)
{
	if (!obj)
		return;
	if (obj->skeleton)
		bpf_object__destroy_skeleton(obj->skeleton);
	free(obj);
}

static inline int
watchdog__create_skeleton(struct watchdog *obj);

static inline struct watchdog *
watchdog__open_opts(const struct bpf_object_open_opts *opts)
{
	struct watchdog *obj;
	int err;

	obj = (struct watchdog *)calloc(1, sizeof(*obj));
	if (!obj) {
		errno = ENOMEM;
		return NULL;
	}

	err = watchdog__create_skeleton(obj);
	if (err)
		goto err_out;

	err = bpf_object__open_skeleton(obj->skeleton, opts);
	if (err)
		goto err_out;

	return obj;
err_out:
	watchdog__destroy(obj);
	errno = -err;
	return NULL;
}

static inline struct watchdog *
watchdog__open(void)
{
	return watchdog__open_opts(NULL);
}

static inline int
watchdog__load(struct watchdog *obj)
{
	return bpf_object__load_skeleton(obj->skeleton);
}

static inline struct watchdog *
watchdog__open_and_load(void)
{
	struct watchdog *obj;
	int err;

	obj = watchdog__open();
	if (!obj)
		return NULL;
	err = watchdog__load(obj);
	if (err) {
		watchdog__destroy(obj);
		errno = -err;
		return NULL;
	}
	return obj;
}

static inline int
watchdog__attach(struct watchdog *obj)
{
	return bpf_object__attach_skeleton(obj->skeleton);
}

static inline void
watchdog__detach(struct watchdog *obj)
{
	bpf_object__detach_skeleton(obj->skeleton);
}

static inline const void *watchdog__elf_bytes(size_t *sz);

static inline int
watchdog__create_skeleton(struct watchdog *obj)
{
	struct bpf_object_skeleton *s;
	struct bpf_map_skeleton *map __attribute__((unused));
	int err;

	s = (struct bpf_object_skeleton *)calloc(1, sizeof(*s));
	if (!s)	{
		err = -ENOMEM;
		goto err;
	}

	s->sz = sizeof(*s);
	s->name = "watchdog";
	s->obj = &obj->obj;

	/* maps */
	s->map_cnt = 1;
	s->map_skel_sz = 24;
	s->maps = (struct bpf_map_skeleton *)calloc(s->map_cnt,
			sizeof(*s->maps) > 24 ? sizeof(*s->maps) : 24);
	if (!s->maps) {
		err = -ENOMEM;
		goto err;
	}

	map = (struct bpf_map_skeleton *)((char *)s->maps + 0 * s->map_skel_sz);
	map->name = "events";
	map->map = &obj->maps.events;

	/* programs */
	s->prog_cnt = 1;
	s->prog_skel_sz = sizeof(*s->progs);
	s->progs = (struct bpf_prog_skeleton *)calloc(s->prog_cnt, s->prog_skel_sz);
	if (!s->progs) {
		err = -ENOMEM;
		goto err;
	}

	s->progs[0].name = "handle_openat";
	s->progs[0].prog = &obj->progs.handle_openat;
	s->progs[0].link = &obj->links.handle_openat;

	s->data = watchdog__elf_bytes(&s->data_sz);

	obj->skeleton = s;
	return 0;
err:
	bpf_object__destroy_skeleton(s);
	return err;
}

static inline const void *watchdog__elf_bytes(size_t *sz)
{
	static const char data[] __attribute__((__aligned__(8))) = "\
\x7f\x45\x4c\x46\x02\x01\x01\0\0\0\0\0\0\0\0\0\x01\0\xf7\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\xa0\x15\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\x40\0\x1b\0\
\x01\0\xbf\x16\0\0\0\0\0\0\xb7\x07\0\0\0\0\0\0\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\xb7\x02\0\0\x18\x01\0\0\xb7\x03\0\0\0\0\0\0\x85\0\0\0\x83\0\0\0\x15\0\x11\
\0\0\0\0\0\x63\x70\x14\x01\0\0\0\0\xbf\x07\0\0\0\0\0\0\x85\0\0\0\x0e\0\0\0\x77\
\0\0\0\x20\0\0\0\x63\x07\0\0\0\0\0\0\xbf\x71\0\0\0\0\0\0\x07\x01\0\0\x04\0\0\0\
\xb7\x02\0\0\x10\0\0\0\x85\0\0\0\x10\0\0\0\x79\x63\x18\0\0\0\0\0\xbf\x71\0\0\0\
\0\0\0\x07\x01\0\0\x14\0\0\0\xb7\x02\0\0\0\x01\0\0\x85\0\0\0\x72\0\0\0\xbf\x71\
\0\0\0\0\0\0\xb7\x02\0\0\0\0\0\0\x85\0\0\0\x84\0\0\0\xb7\0\0\0\0\0\0\0\x95\0\0\
\0\0\0\0\0\x47\x50\x4c\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x22\0\0\0\x05\
\0\x08\0\x02\0\0\0\x08\0\0\0\x14\0\0\0\x04\0\x08\x01\x51\x04\x08\xd8\x01\x01\
\x56\0\x04\x38\x58\x01\x50\0\x01\x11\x01\x25\x25\x13\x05\x03\x25\x72\x17\x10\
\x17\x1b\x25\x11\x1b\x12\x06\x73\x17\x8c\x01\x17\0\0\x02\x34\0\x03\x25\x49\x13\
\x3f\x19\x3a\x0b\x3b\x0b\x02\x18\0\0\x03\x01\x01\x49\x13\0\0\x04\x21\0\x49\x13\
\x37\x0b\0\0\x05\x24\0\x03\x25\x3e\x0b\x0b\x0b\0\0\x06\x24\0\x03\x25\x0b\x0b\
\x3e\x0b\0\0\x07\x13\x01\x0b\x0b\x3a\x0b\x3b\x0b\0\0\x08\x0d\0\x03\x25\x49\x13\
\x3a\x0b\x3b\x0b\x38\x0b\0\0\x09\x0f\0\x49\x13\0\0\x0a\x21\0\x49\x13\x37\x06\0\
\0\x0b\x34\0\x03\x25\x49\x13\x3a\x0b\x3b\x05\x1c\x0f\0\0\x0c\x15\x01\x49\x13\
\x27\x19\0\0\x0d\x05\0\x49\x13\0\0\x0e\x0f\0\0\0\x0f\x16\0\x49\x13\x03\x25\x3a\
\x0b\x3b\x05\0\0\x10\x15\0\x49\x13\x27\x19\0\0\x11\x26\0\0\0\x12\x15\x01\x27\
\x19\0\0\x13\x2e\x01\x11\x1b\x12\x06\x40\x18\x7a\x19\x03\x25\x3a\x0b\x3b\x0b\
\x27\x19\x49\x13\x3f\x19\0\0\x14\x05\0\x02\x22\x03\x25\x3a\x0b\x3b\x0b\x49\x13\
\0\0\x15\x34\0\x02\x22\x03\x25\x3a\x0b\x3b\x0b\x49\x13\0\0\x16\x13\x01\x03\x25\
\x0b\x0b\x3a\x0b\x3b\x0b\0\0\x17\x26\0\x49\x13\0\0\x18\x13\x01\x03\x25\x0b\x05\
\x3a\x0b\x3b\x0b\0\0\x19\x0d\0\x03\x25\x49\x13\x3a\x0b\x3b\x0b\x38\x05\0\0\x1a\
\x21\0\x49\x13\x37\x05\0\0\0\x18\x02\0\0\x05\0\x01\x08\0\0\0\0\x01\0\x1d\0\x01\
\x08\0\0\0\0\0\0\0\x02\x02\xd8\0\0\0\x08\0\0\0\x0c\0\0\0\x02\x03\x32\0\0\0\0\
\x06\x02\xa1\0\x03\x3e\0\0\0\x04\x42\0\0\0\x04\0\x05\x04\x06\x01\x06\x05\x08\
\x07\x02\x06\x51\0\0\0\0\x1c\x02\xa1\x01\x07\x10\0\x19\x08\x07\x68\0\0\0\0\x1a\
\0\x08\x09\x7d\0\0\0\0\x1b\x08\0\x09\x6d\0\0\0\x03\x79\0\0\0\x04\x42\0\0\0\x1b\
\0\x05\x08\x05\x04\x09\x82\0\0\0\x03\x79\0\0\0\x0a\x42\0\0\0\0\0\0\x01\0\x0b\
\x0a\x9c\0\0\0\x02\x68\x0c\x83\x01\x09\xa1\0\0\0\x0c\xb6\0\0\0\x0d\xb6\0\0\0\
\x0d\xb7\0\0\0\x0d\xb7\0\0\0\0\x0e\x0f\xc0\0\0\0\x0c\x01\xac\x73\x05\x0b\x07\
\x08\x0b\x0d\xce\0\0\0\x02\x72\x01\x0e\x09\xd3\0\0\0\x10\xb7\0\0\0\x0b\x0e\xe2\
\0\0\0\x02\x8c\x01\x10\x09\xe7\0\0\0\x0c\xf7\0\0\0\x0d\xb6\0\0\0\x0d\xfb\0\0\0\
\0\x05\x0f\x05\x08\x0f\x04\x01\0\0\x11\x01\x0c\x75\x05\x10\x07\x04\x0b\x12\x12\
\x01\0\0\x02\x27\x0b\x72\x09\x17\x01\0\0\x0c\xf7\0\0\0\x0d\xb6\0\0\0\x0d\xfb\0\
\0\0\x0d\x2c\x01\0\0\0\x09\x31\x01\0\0\x11\x0b\x13\x3d\x01\0\0\x02\x7a\x0c\x84\
\x01\x09\x42\x01\0\0\x12\x0d\xb6\0\0\0\x0d\xb7\0\0\0\0\x13\x02\xd8\0\0\0\x01\
\x5a\x14\0\x1f\x79\0\0\0\x14\0\x15\0\x1f\x70\x01\0\0\x15\x01\x20\0\x21\xd1\x01\
\0\0\0\x09\x75\x01\0\0\x16\x1f\x28\0\x0f\x08\x16\xb7\0\0\0\0\x10\0\x08\x17\xb7\
\0\0\0\0\x11\x08\x08\x18\x79\0\0\0\0\x12\x10\x08\x19\x79\0\0\0\0\x13\x14\x08\
\x1a\xba\x01\0\0\0\x14\x18\x08\x1b\x79\0\0\0\0\x15\x20\x08\x1c\xc4\x01\0\0\0\
\x16\x24\0\x09\xbf\x01\0\0\x17\x3e\0\0\0\x0f\xcd\x01\0\0\x1e\x01\x5e\x74\x05\
\x1d\x07\x02\x09\xd6\x01\0\0\x18\x20\x18\x01\0\x08\x08\x21\xfb\0\0\0\0\x09\0\
\x08\x22\x02\x02\0\0\0\x0a\x04\x08\x1a\x0e\x02\0\0\0\x0b\x14\x19\x23\x79\0\0\0\
\0\x0c\x14\x01\0\x03\x3e\0\0\0\x04\x42\0\0\0\x10\0\x03\x3e\0\0\0\x1a\x42\0\0\0\
\0\x01\0\0\x94\0\0\0\x05\0\0\0\0\0\0\0\x27\0\0\0\x36\0\0\0\x60\0\0\0\x68\0\0\0\
\x6d\0\0\0\x81\0\0\0\x88\0\0\0\x8d\0\0\0\x91\0\0\0\x9d\0\0\0\xb1\0\0\0\xc4\0\0\
\0\xca\0\0\0\xe3\0\0\0\xf8\0\0\0\xfd\0\0\0\x0a\x01\0\0\x10\x01\0\0\x28\x01\0\0\
\x3b\x01\0\0\x49\x01\0\0\x4d\x01\0\0\x66\x01\0\0\x7f\x01\0\0\x8a\x01\0\0\x8e\
\x01\0\0\x97\x01\0\0\x9d\x01\0\0\xa2\x01\0\0\xb1\x01\0\0\xb7\x01\0\0\xc2\x01\0\
\0\xc8\x01\0\0\xcc\x01\0\0\xd4\x01\0\0\x55\x62\x75\x6e\x74\x75\x20\x63\x6c\x61\
\x6e\x67\x20\x76\x65\x72\x73\x69\x6f\x6e\x20\x31\x38\x2e\x31\x2e\x33\x20\x28\
\x31\x75\x62\x75\x6e\x74\x75\x31\x29\0\x77\x61\x74\x63\x68\x64\x6f\x67\x2e\x62\
\x70\x66\x2e\x63\0\x2f\x68\x6f\x6d\x65\x2f\x72\x61\x75\x6e\x69\x6c\x2d\x73\x69\
\x6e\x67\x68\x2f\x50\x72\x6f\x6a\x65\x63\x74\x73\x2f\x65\x42\x50\x46\x2d\x57\
\x61\x74\x63\x68\x64\x6f\x67\0\x4c\x49\x43\x45\x4e\x53\x45\0\x63\x68\x61\x72\0\
\x5f\x5f\x41\x52\x52\x41\x59\x5f\x53\x49\x5a\x45\x5f\x54\x59\x50\x45\x5f\x5f\0\
\x65\x76\x65\x6e\x74\x73\0\x74\x79\x70\x65\0\x69\x6e\x74\0\x6d\x61\x78\x5f\x65\
\x6e\x74\x72\x69\x65\x73\0\x62\x70\x66\x5f\x72\x69\x6e\x67\x62\x75\x66\x5f\x72\
\x65\x73\x65\x72\x76\x65\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x6c\x6f\x6e\x67\
\x20\x6c\x6f\x6e\x67\0\x5f\x5f\x75\x36\x34\0\x62\x70\x66\x5f\x67\x65\x74\x5f\
\x63\x75\x72\x72\x65\x6e\x74\x5f\x70\x69\x64\x5f\x74\x67\x69\x64\0\x62\x70\x66\
\x5f\x67\x65\x74\x5f\x63\x75\x72\x72\x65\x6e\x74\x5f\x63\x6f\x6d\x6d\0\x6c\x6f\
\x6e\x67\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x69\x6e\x74\0\x5f\x5f\x75\x33\
\x32\0\x62\x70\x66\x5f\x70\x72\x6f\x62\x65\x5f\x72\x65\x61\x64\x5f\x75\x73\x65\
\x72\x5f\x73\x74\x72\0\x62\x70\x66\x5f\x72\x69\x6e\x67\x62\x75\x66\x5f\x73\x75\
\x62\x6d\x69\x74\0\x68\x61\x6e\x64\x6c\x65\x5f\x6f\x70\x65\x6e\x61\x74\0\x63\
\x74\x78\0\x5f\x5f\x75\x6e\x75\x73\x65\x64\x5f\x73\x79\x73\x63\x61\x6c\x6c\x5f\
\x68\x65\x61\x64\x65\x72\x31\0\x5f\x5f\x75\x6e\x75\x73\x65\x64\x5f\x73\x79\x73\
\x63\x61\x6c\x6c\x5f\x68\x65\x61\x64\x65\x72\x32\0\x73\x79\x73\x63\x61\x6c\x6c\
\x5f\x6e\x72\0\x64\x66\x64\0\x66\x69\x6c\x65\x6e\x61\x6d\x65\0\x66\x6c\x61\x67\
\x73\0\x6d\x6f\x64\x65\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x73\x68\x6f\x72\
\x74\0\x5f\x5f\x75\x31\x36\0\x6f\x70\x65\x6e\x61\x74\x5f\x63\x74\x78\0\x65\x76\
\x65\x6e\x74\0\x70\x69\x64\0\x63\x6f\x6d\x6d\x61\x6e\x64\0\x6f\x70\x63\x6f\x64\
\x65\0\x1c\0\0\0\x05\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x9f\xeb\x01\0\x18\0\0\0\0\0\0\0\xe0\x01\0\0\xe0\x01\0\0\xf2\x02\0\0\0\0\0\0\0\
\0\0\x02\x03\0\0\0\x01\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\x01\0\0\0\0\0\0\0\x03\
\0\0\0\0\x02\0\0\0\x04\0\0\0\x1b\0\0\0\x05\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\
\0\0\0\0\0\0\0\x02\x06\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x02\0\0\0\x04\0\0\0\0\0\
\0\x01\0\0\0\0\x02\0\0\x04\x10\0\0\0\x19\0\0\0\x01\0\0\0\0\0\0\0\x1e\0\0\0\x05\
\0\0\0\x40\0\0\0\x2a\0\0\0\0\0\0\x0e\x07\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\x02\x0a\
\0\0\0\x31\0\0\0\x07\0\0\x04\x28\0\0\0\x3c\0\0\0\x0b\0\0\0\0\0\0\0\x55\0\0\0\
\x0b\0\0\0\x40\0\0\0\x6e\0\0\0\x02\0\0\0\x80\0\0\0\x79\0\0\0\x02\0\0\0\xa0\0\0\
\0\x7d\0\0\0\x0d\0\0\0\xc0\0\0\0\x86\0\0\0\x02\0\0\0\0\x01\0\0\x8c\0\0\0\x10\0\
\0\0\x20\x01\0\0\x91\0\0\0\0\0\0\x08\x0c\0\0\0\x97\0\0\0\0\0\0\x01\x08\0\0\0\
\x40\0\0\0\0\0\0\0\0\0\0\x02\x0e\0\0\0\0\0\0\0\0\0\0\x0a\x0f\0\0\0\xaa\0\0\0\0\
\0\0\x01\x01\0\0\0\x08\0\0\x01\xaf\0\0\0\0\0\0\x08\x11\0\0\0\xb5\0\0\0\0\0\0\
\x01\x02\0\0\0\x10\0\0\0\0\0\0\0\x01\0\0\x0d\x02\0\0\0\xc4\0\0\0\x09\0\0\0\xc8\
\0\0\0\x01\0\0\x0c\x12\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x0f\0\0\0\x04\0\0\0\x04\
\0\0\0\xdc\x02\0\0\0\0\0\x0e\x14\0\0\0\x01\0\0\0\xe4\x02\0\0\x01\0\0\x0f\0\0\0\
\0\x08\0\0\0\0\0\0\0\x10\0\0\0\xea\x02\0\0\x01\0\0\x0f\0\0\0\0\x15\0\0\0\0\0\0\
\0\x04\0\0\0\0\x69\x6e\x74\0\x5f\x5f\x41\x52\x52\x41\x59\x5f\x53\x49\x5a\x45\
\x5f\x54\x59\x50\x45\x5f\x5f\0\x74\x79\x70\x65\0\x6d\x61\x78\x5f\x65\x6e\x74\
\x72\x69\x65\x73\0\x65\x76\x65\x6e\x74\x73\0\x6f\x70\x65\x6e\x61\x74\x5f\x63\
\x74\x78\0\x5f\x5f\x75\x6e\x75\x73\x65\x64\x5f\x73\x79\x73\x63\x61\x6c\x6c\x5f\
\x68\x65\x61\x64\x65\x72\x31\0\x5f\x5f\x75\x6e\x75\x73\x65\x64\x5f\x73\x79\x73\
\x63\x61\x6c\x6c\x5f\x68\x65\x61\x64\x65\x72\x32\0\x73\x79\x73\x63\x61\x6c\x6c\
\x5f\x6e\x72\0\x64\x66\x64\0\x66\x69\x6c\x65\x6e\x61\x6d\x65\0\x66\x6c\x61\x67\
\x73\0\x6d\x6f\x64\x65\0\x5f\x5f\x75\x36\x34\0\x75\x6e\x73\x69\x67\x6e\x65\x64\
\x20\x6c\x6f\x6e\x67\x20\x6c\x6f\x6e\x67\0\x63\x68\x61\x72\0\x5f\x5f\x75\x31\
\x36\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x73\x68\x6f\x72\x74\0\x63\x74\x78\0\
\x68\x61\x6e\x64\x6c\x65\x5f\x6f\x70\x65\x6e\x61\x74\0\x74\x70\x2f\x73\x79\x73\
\x63\x61\x6c\x6c\x73\x2f\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\x5f\x6f\x70\x65\
\x6e\x61\x74\0\x2f\x68\x6f\x6d\x65\x2f\x72\x61\x75\x6e\x69\x6c\x2d\x73\x69\x6e\
\x67\x68\x2f\x50\x72\x6f\x6a\x65\x63\x74\x73\x2f\x65\x42\x50\x46\x2d\x57\x61\
\x74\x63\x68\x64\x6f\x67\x2f\x77\x61\x74\x63\x68\x64\x6f\x67\x2e\x62\x70\x66\
\x2e\x63\0\x69\x6e\x74\x20\x68\x61\x6e\x64\x6c\x65\x5f\x6f\x70\x65\x6e\x61\x74\
\x28\x73\x74\x72\x75\x63\x74\x20\x6f\x70\x65\x6e\x61\x74\x5f\x63\x74\x78\x20\
\x2a\x63\x74\x78\x29\x20\x7b\0\x20\x20\x20\x20\x73\x74\x72\x75\x63\x74\x20\x65\
\x76\x65\x6e\x74\x20\x2a\x65\x76\x65\x6e\x74\x20\x3d\x20\x62\x70\x66\x5f\x72\
\x69\x6e\x67\x62\x75\x66\x5f\x72\x65\x73\x65\x72\x76\x65\x28\x26\x65\x76\x65\
\x6e\x74\x73\x2c\x20\x73\x69\x7a\x65\x6f\x66\x28\x73\x74\x72\x75\x63\x74\x20\
\x65\x76\x65\x6e\x74\x29\x2c\x20\x30\x29\x3b\0\x20\x20\x20\x20\x69\x66\x20\x28\
\x21\x65\x76\x65\x6e\x74\x29\x20\x72\x65\x74\x75\x72\x6e\x20\x30\x3b\0\x20\x20\
\x20\x20\x65\x76\x65\x6e\x74\x2d\x3e\x6f\x70\x63\x6f\x64\x65\x20\x3d\x20\x30\
\x3b\x20\x2f\x2f\x20\x4f\x50\x45\x4e\x20\x6f\x70\x65\x72\x61\x74\x69\x6f\x6e\0\
\x20\x20\x20\x20\x65\x76\x65\x6e\x74\x2d\x3e\x70\x69\x64\x20\x3d\x20\x62\x70\
\x66\x5f\x67\x65\x74\x5f\x63\x75\x72\x72\x65\x6e\x74\x5f\x70\x69\x64\x5f\x74\
\x67\x69\x64\x28\x29\x20\x3e\x3e\x20\x33\x32\x3b\0\x20\x20\x20\x20\x62\x70\x66\
\x5f\x67\x65\x74\x5f\x63\x75\x72\x72\x65\x6e\x74\x5f\x63\x6f\x6d\x6d\x28\x26\
\x65\x76\x65\x6e\x74\x2d\x3e\x63\x6f\x6d\x6d\x61\x6e\x64\x2c\x20\x73\x69\x7a\
\x65\x6f\x66\x28\x65\x76\x65\x6e\x74\x2d\x3e\x63\x6f\x6d\x6d\x61\x6e\x64\x29\
\x29\x3b\0\x20\x20\x20\x20\x62\x70\x66\x5f\x70\x72\x6f\x62\x65\x5f\x72\x65\x61\
\x64\x5f\x75\x73\x65\x72\x5f\x73\x74\x72\x28\x65\x76\x65\x6e\x74\x2d\x3e\x66\
\x69\x6c\x65\x6e\x61\x6d\x65\x2c\x20\x73\x69\x7a\x65\x6f\x66\x28\x65\x76\x65\
\x6e\x74\x2d\x3e\x66\x69\x6c\x65\x6e\x61\x6d\x65\x29\x2c\x20\x63\x74\x78\x2d\
\x3e\x66\x69\x6c\x65\x6e\x61\x6d\x65\x29\x3b\0\x20\x20\x20\x20\x62\x70\x66\x5f\
\x72\x69\x6e\x67\x62\x75\x66\x5f\x73\x75\x62\x6d\x69\x74\x28\x65\x76\x65\x6e\
\x74\x2c\x20\x30\x29\x3b\0\x7d\0\x4c\x49\x43\x45\x4e\x53\x45\0\x2e\x6d\x61\x70\
\x73\0\x6c\x69\x63\x65\x6e\x73\x65\0\0\0\x9f\xeb\x01\0\x20\0\0\0\0\0\0\0\x14\0\
\0\0\x14\0\0\0\xec\0\0\0\0\x01\0\0\0\0\0\0\x08\0\0\0\xd6\0\0\0\x01\0\0\0\0\0\0\
\0\x13\0\0\0\x10\0\0\0\xd6\0\0\0\x0e\0\0\0\0\0\0\0\xf3\0\0\0\x2c\x01\0\0\0\x7c\
\0\0\x10\0\0\0\xf3\0\0\0\x58\x01\0\0\x1b\x84\0\0\x38\0\0\0\xf3\0\0\0\xa9\x01\0\
\0\x09\x88\0\0\x40\0\0\0\xf3\0\0\0\xc3\x01\0\0\x13\x90\0\0\x50\0\0\0\xf3\0\0\0\
\xec\x01\0\0\x12\x9c\0\0\x58\0\0\0\xf3\0\0\0\xec\x01\0\0\x2d\x9c\0\0\x60\0\0\0\
\xf3\0\0\0\xec\x01\0\0\x10\x9c\0\0\x68\0\0\0\xf3\0\0\0\x1f\x02\0\0\x22\xa0\0\0\
\x78\0\0\0\xf3\0\0\0\x1f\x02\0\0\x05\xa0\0\0\x88\0\0\0\xf3\0\0\0\x62\x02\0\0\
\x4c\xa4\0\0\x90\0\0\0\xf3\0\0\0\x62\x02\0\0\x24\xa4\0\0\xa0\0\0\0\xf3\0\0\0\
\x62\x02\0\0\x05\xa4\0\0\xb0\0\0\0\xf3\0\0\0\xb8\x02\0\0\x05\xb0\0\0\xc8\0\0\0\
\xf3\0\0\0\xda\x02\0\0\x01\xc0\0\0\0\0\0\0\x0c\0\0\0\xff\xff\xff\xff\x04\0\x08\
\0\x08\x7c\x0b\0\x14\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xd8\0\0\0\0\0\0\0\xb2\0\0\0\
\x05\0\x08\0\x69\0\0\0\x08\x01\x01\xfb\x0e\x0d\0\x01\x01\x01\x01\0\0\0\x01\0\0\
\x01\x01\x01\x1f\x03\0\0\0\0\x2a\0\0\0\x2c\0\0\0\x03\x01\x1f\x02\x0f\x05\x1e\
\x03\x3d\0\0\0\0\xf3\x4c\x6e\xbb\xe9\x4d\xf4\x96\xf9\x72\x01\x85\x43\x15\xa3\
\x2d\x4c\0\0\0\x01\x51\xc8\xf6\xec\xae\x8d\x3a\xcc\xed\x9d\x16\x86\x16\xe8\x1c\
\x1b\x56\0\0\0\x02\x09\xcf\xcd\x71\x69\xc2\x4b\xec\x44\x8f\x30\x58\x2e\x8c\x6d\
\xb9\x04\0\0\x09\x02\0\0\0\0\0\0\0\0\x03\x1e\x01\x05\x1b\x0a\x30\x05\x09\x59\
\x05\x13\x22\x05\x12\x31\x05\x2d\x06\x20\x05\x10\x20\x05\x22\x06\x21\x05\x05\
\x06\x2e\x05\x4c\x06\x2f\x05\x24\x06\x20\x05\x05\x2e\x06\x31\x05\x01\x40\x02\
\x02\0\x01\x01\x2f\x68\x6f\x6d\x65\x2f\x72\x61\x75\x6e\x69\x6c\x2d\x73\x69\x6e\
\x67\x68\x2f\x50\x72\x6f\x6a\x65\x63\x74\x73\x2f\x65\x42\x50\x46\x2d\x57\x61\
\x74\x63\x68\x64\x6f\x67\0\x2e\0\x2f\x75\x73\x72\x2f\x69\x6e\x63\x6c\x75\x64\
\x65\x2f\x62\x70\x66\0\x77\x61\x74\x63\x68\x64\x6f\x67\x2e\x62\x70\x66\x2e\x63\
\0\x76\x6d\x6c\x69\x6e\x75\x78\x2e\x68\0\x62\x70\x66\x5f\x68\x65\x6c\x70\x65\
\x72\x5f\x64\x65\x66\x73\x2e\x68\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\xf7\0\0\0\x04\0\xf1\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\
\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x27\x01\0\0\0\0\x03\0\xc8\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x07\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x03\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x0b\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x0d\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x03\0\x0e\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x14\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x16\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x03\0\x18\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x43\0\0\0\x12\0\x03\0\0\0\0\0\0\0\
\0\0\xd8\0\0\0\0\0\0\0\x61\0\0\0\x11\0\x06\0\0\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\
\x1f\x01\0\0\x11\0\x05\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\
\x01\0\0\0\x0d\0\0\0\x08\0\0\0\0\0\0\0\x03\0\0\0\x05\0\0\0\x11\0\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\x15\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x1f\0\0\0\0\0\0\0\
\x03\0\0\0\x08\0\0\0\x23\0\0\0\0\0\0\0\x03\0\0\0\x04\0\0\0\x08\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x0c\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x10\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x14\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x18\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x1c\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x20\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x24\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x28\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x2c\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x30\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x34\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x38\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x3c\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x40\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x44\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x48\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x4c\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x50\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x54\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x58\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x5c\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x60\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x64\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x68\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x6c\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x70\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x74\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x78\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x7c\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x80\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x84\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x88\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x8c\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x90\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x94\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x08\0\0\0\0\0\0\0\
\x02\0\0\0\x0e\0\0\0\x10\0\0\0\0\0\0\0\x02\0\0\0\x0d\0\0\0\x18\0\0\0\0\0\0\0\
\x02\0\0\0\x02\0\0\0\xd8\x01\0\0\0\0\0\0\x04\0\0\0\x0d\0\0\0\xf0\x01\0\0\0\0\0\
\0\x04\0\0\0\x0e\0\0\0\x2c\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x40\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\x50\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x60\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\x70\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x80\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\x90\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\xa0\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\xb0\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\xc0\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\xd0\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\xe0\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\xf0\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\0\x01\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\x10\x01\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x14\0\0\0\0\0\0\0\
\x03\0\0\0\x09\0\0\0\x18\0\0\0\0\0\0\0\x02\0\0\0\x02\0\0\0\x22\0\0\0\0\0\0\0\
\x03\0\0\0\x0b\0\0\0\x26\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x2a\0\0\0\0\0\0\0\
\x03\0\0\0\x0b\0\0\0\x36\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x4b\0\0\0\0\0\0\0\
\x03\0\0\0\x0b\0\0\0\x60\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x7a\0\0\0\0\0\0\0\
\x02\0\0\0\x02\0\0\0\x0c\x0e\x0d\0\x2e\x64\x65\x62\x75\x67\x5f\x61\x62\x62\x72\
\x65\x76\0\x2e\x74\x65\x78\x74\0\x2e\x72\x65\x6c\x2e\x42\x54\x46\x2e\x65\x78\
\x74\0\x2e\x72\x65\x6c\x74\x70\x2f\x73\x79\x73\x63\x61\x6c\x6c\x73\x2f\x73\x79\
\x73\x5f\x65\x6e\x74\x65\x72\x5f\x6f\x70\x65\x6e\x61\x74\0\x68\x61\x6e\x64\x6c\
\x65\x5f\x6f\x70\x65\x6e\x61\x74\0\x2e\x64\x65\x62\x75\x67\x5f\x6c\x6f\x63\x6c\
\x69\x73\x74\x73\0\x65\x76\x65\x6e\x74\x73\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\
\x75\x67\x5f\x73\x74\x72\x5f\x6f\x66\x66\x73\x65\x74\x73\0\x2e\x6d\x61\x70\x73\
\0\x2e\x64\x65\x62\x75\x67\x5f\x73\x74\x72\0\x2e\x64\x65\x62\x75\x67\x5f\x6c\
\x69\x6e\x65\x5f\x73\x74\x72\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x61\
\x64\x64\x72\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x69\x6e\x66\x6f\0\
\x2e\x6c\x6c\x76\x6d\x5f\x61\x64\x64\x72\x73\x69\x67\0\x6c\x69\x63\x65\x6e\x73\
\x65\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x6c\x69\x6e\x65\0\x2e\x72\
\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x66\x72\x61\x6d\x65\0\x77\x61\x74\x63\x68\
\x64\x6f\x67\x2e\x62\x70\x66\x2e\x63\0\x2e\x73\x74\x72\x74\x61\x62\0\x2e\x73\
\x79\x6d\x74\x61\x62\0\x2e\x72\x65\x6c\x2e\x42\x54\x46\0\x4c\x49\x43\x45\x4e\
\x53\x45\0\x4c\x42\x42\x30\x5f\x32\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x06\x01\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x6b\x14\0\0\0\0\0\0\x2e\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\x0f\0\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x26\0\
\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\xd8\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x22\0\0\0\x09\0\0\0\
\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xf8\x0f\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x1a\0\
\0\0\x03\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\xce\0\0\0\x01\0\0\0\x03\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\x01\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x7f\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\x20\x01\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x51\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x30\
\x01\0\0\0\0\0\0\x26\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x01\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x56\x01\0\0\0\0\0\0\
\x32\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb4\0\0\
\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x88\x02\0\0\0\0\0\0\x1c\x02\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb0\0\0\0\x09\0\0\0\
\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\x10\0\0\0\0\0\0\x50\0\0\0\0\0\0\0\x1a\0\
\0\0\x09\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x6c\0\0\0\x01\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\xa4\x04\0\0\0\0\0\0\x98\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x68\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x58\x10\0\0\0\0\0\0\x40\x02\0\0\0\0\0\0\x1a\0\0\0\x0b\0\0\0\x08\0\0\
\0\0\0\0\0\x10\0\0\0\0\0\0\0\x85\0\0\0\x01\0\0\0\x30\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\x3c\x05\0\0\0\0\0\0\xdb\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\
\x01\0\0\0\0\0\0\0\xa4\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x17\x07\
\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\xa0\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x98\x12\0\0\0\0\0\0\
\x30\0\0\0\0\0\0\0\x1a\0\0\0\x0e\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x1a\
\x01\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x38\x07\0\0\0\0\0\0\xea\x04\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x16\x01\0\0\x09\
\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc8\x12\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\
\x1a\0\0\0\x10\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x19\0\0\0\x01\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x24\x0c\0\0\0\0\0\0\x20\x01\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x15\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\xe8\x12\0\0\0\0\0\0\xf0\0\0\0\0\0\0\0\x1a\0\0\0\x12\0\0\0\
\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\xea\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x48\x0d\0\0\0\0\0\0\x28\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\xe6\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xd8\
\x13\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x1a\0\0\0\x14\0\0\0\x08\0\0\0\0\0\0\0\x10\0\
\0\0\0\0\0\0\xda\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x70\x0d\0\0\0\
\0\0\0\xb6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xd6\
\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xf8\x13\0\0\0\0\0\0\x70\0\0\
\0\0\0\0\0\x1a\0\0\0\x16\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x90\0\0\0\
\x01\0\0\0\x30\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x26\x0e\0\0\0\0\0\0\x68\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\xc0\0\0\0\x03\x4c\xff\
\x6f\0\0\0\x80\0\0\0\0\0\0\0\0\0\0\0\0\x68\x14\0\0\0\0\0\0\x03\0\0\0\0\0\0\0\
\x1a\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x0e\x01\0\0\x02\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x90\x0e\0\0\0\0\0\0\x68\x01\0\0\0\0\0\0\x01\0\0\0\
\x0c\0\0\0\x08\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\0";

	*sz = sizeof(data) - 1;
	return (const void *)data;
}

#ifdef __cplusplus
struct watchdog *watchdog::open(const struct bpf_object_open_opts *opts) { return watchdog__open_opts(opts); }
struct watchdog *watchdog::open_and_load() { return watchdog__open_and_load(); }
int watchdog::load(struct watchdog *skel) { return watchdog__load(skel); }
int watchdog::attach(struct watchdog *skel) { return watchdog__attach(skel); }
void watchdog::detach(struct watchdog *skel) { watchdog__detach(skel); }
void watchdog::destroy(struct watchdog *skel) { watchdog__destroy(skel); }
const void *watchdog::elf_bytes(size_t *sz) { return watchdog__elf_bytes(sz); }
#endif /* __cplusplus */

__attribute__((unused)) static void
watchdog__assert(struct watchdog *s __attribute__((unused)))
{
#ifdef __cplusplus
#define _Static_assert static_assert
#endif
#ifdef __cplusplus
#undef _Static_assert
#endif
}

#endif /* __WATCHDOG_SKEL_H__ */
